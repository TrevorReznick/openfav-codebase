---
// src/pages/test-dynamic-loading.astro
import Layout from '../layouts/Layout.astro';
import DynamicWrapper from '@/react/wrappers/dynamicWrapper';

// List of all components to test with full paths and extensions
const components = [
  { 
    path: '@/react/components/auth/Auth.tsx',
    name: 'Auth',
    description: 'Authentication component',
    props: {}
  },
  { 
    path: '@/react/components/common/LoadFallback.tsx',
    name: 'LoadFallback',
    description: 'Loading fallback component',
    props: {}
  },
  { 
    path: '@/react/components/common/LoadingFallback.tsx',
    name: 'LoadingFallback',
    description: 'Loading fallback UI',
    props: {}
  },
  { 
    path: '@/react/components/common/ThemeToggle.tsx',
    name: 'ThemeToggle',
    description: 'Theme toggle component',
    props: {}
  },
  { 
    path: '@/react/components/examples/TestComponent.tsx',
    name: 'TestComponent',
    description: 'Test component example',
    props: {
      title: 'Dynamically Loaded Component',
      description: 'This component was loaded using the DynamicWrapper'
    }
  },
  { 
    path: '@/react/components/examples/TestReactComponent.tsx',
    name: 'TestReactComponent',
    description: 'Another test React component',
    props: {}
  },
  { 
    path: '@/react/components/home/index.tsx',
    name: 'Home',
    description: 'Home page component',
    props: {}
  },
  { 
    path: '@/react/components/ui/button.tsx',
    name: 'Button',
    description: 'UI Button component',
    props: {
      children: 'Click Me',
      variant: 'default'
    }
  },
  { 
    path: '@/react/components/ui/card.tsx',
    name: 'Card',
    description: 'UI Card component',
    props: {
      className: 'w-[350px] p-6 border rounded-lg',
      children: 'This is a card component. Please check the console for more details.'
    }
  }
];
---

<Layout title="Test Dynamic Component Loading">
  <main class="container mx-auto p-4">
    <h1 class="text-2xl font-bold mb-6">Dynamic Component Loader Test</h1>
    
    <div class="space-y-8">
      {components.map((component) => (
        <div class="p-6 border rounded-lg bg-gray-50 dark:bg-gray-800">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h2 class="text-xl font-semibold">{component.name}</h2>
              <p class="text-gray-600 dark:text-gray-400 text-sm">{component.description}</p>
              <div class="mt-1">
                <code class="text-xs bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded">
                  {component.path}
                </code>
              </div>
            </div>
          </div>
          
          <div class="p-4 border rounded bg-white dark:bg-gray-900">
            <DynamicWrapper 
              componentPath={component.path}
              debug={true}
              props={component.props}
            />
          </div>
          
          {component.props && (
            <div class="mt-4 p-3 bg-gray-100 dark:bg-gray-700 rounded text-sm">
              <div class="font-mono text-xs overflow-x-auto">
                Props: <pre class="inline">{JSON.stringify(component.props, null, 2)}</pre>
              </div>
            </div>
          )}
        </div>
      ))}
    </div>
    
    <div class="mt-8 p-4 border rounded-lg bg-gray-50 dark:bg-gray-800">
      <h2 class="text-xl font-semibold mb-4">How It Works</h2>
      <ol class="list-decimal pl-5 space-y-2">
        <li>Each component is loaded using the <code>DynamicWrapper</code> component</li>
        <li>The wrapper calls <code>getDynamicComponent()</code> to resolve and import the component</li>
        <li>Components are loaded with their specific props</li>
        <li>Check the browser console to see detailed debug logs for each component load</li>
      </ol>
    </div>
  </main>
</Layout>

<script>
  // Client-side script to demonstrate dynamic loading
  console.log('Page loaded. The DynamicWrapper will now attempt to load the component.');
</script>
